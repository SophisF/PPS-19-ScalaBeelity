[0m[[0m[31merror[0m] [0m[0m/Users/enricognagnarella/ScalaBeelity/Project/src/main/scala/controller/Looper.scala:69:106: postfix operator toDouble needs to be enabled[0m
[0m[[0m[31merror[0m] [0m[0mby making the implicit value scala.language.postfixOps visible.[0m
[0m[[0m[31merror[0m] [0m[0m----[0m
[0m[[0m[31merror[0m] [0m[0mThis can be achieved by adding the import clause 'import scala.language.postfixOps'[0m
[0m[[0m[31merror[0m] [0m[0mor by setting the compiler option -language:postfixOps.[0m
[0m[[0m[31merror[0m] [0m[0mSee the Scaladoc for value scala.language.postfixOps for a discussion[0m
[0m[[0m[31merror[0m] [0m[0mwhy the feature needs to be explicitly enabled.[0m
[0m[[0m[31merror[0m] [0m[0m    environment.map.dropColumns(0.5).dropRows(0.5).mapValues(c => toPercentage(property, c get property) toDouble),[0m
[0m[[0m[31merror[0m] [0m[0m                                                                                                         ^[0m
[0m[[0m[31merror[0m] [0m[0m/Users/enricognagnarella/ScalaBeelity/Project/src/main/scala/model/environment/property/FilterBuilder.scala:60:68: postfix operator toArray needs to be enabled[0m
[0m[[0m[31merror[0m] [0m[0mby making the implicit value scala.language.postfixOps visible.[0m
[0m[[0m[31merror[0m] [0m[0m        DenseVector(positive2dGaussianFunction(peak, stop, height) toArray) *[0m
[0m[[0m[31merror[0m] [0m[0m                                                                   ^[0m
[0m[[0m[31merror[0m] [0m[0m/Users/enricognagnarella/ScalaBeelity/Project/src/main/scala/model/environment/property/FilterBuilder.scala:61:81: postfix operator toArray needs to be enabled[0m
[0m[[0m[31merror[0m] [0m[0mby making the implicit value scala.language.postfixOps visible.[0m
[0m[[0m[31merror[0m] [0m[0m        DenseVector(positive2dGaussianFunction(peak, stop, width) map(_ / peak) toArray).t[0m
[0m[[0m[31merror[0m] [0m[0m                                                                                ^[0m
[0m[[0m[31merror[0m] [0m[0m/Users/enricognagnarella/ScalaBeelity/Project/src/main/scala/model/environment/property/PropertySource.scala:20:14: postfix operator toInt needs to be enabled[0m
[0m[[0m[31merror[0m] [0m[0mby making the implicit value scala.language.postfixOps visible.[0m
[0m[[0m[31merror[0m] [0m[0m    variance toInt[0m
[0m[[0m[31merror[0m] [0m[0m             ^[0m
[0m[[0m[31merror[0m] [0m[0m/Users/enricognagnarella/ScalaBeelity/Project/src/main/scala/model/environment/property/PropertySource.scala:28:78: postfix operator toInt needs to be enabled[0m
[0m[[0m[31merror[0m] [0m[0mby making the implicit value scala.language.postfixOps visible.[0m
[0m[[0m[31merror[0m] [0m[0m    val result = incrementalValue(Time.time) - incrementalValue(data.lastGet toInt)[0m
[0m[[0m[31merror[0m] [0m[0m                                                                             ^[0m
[0m[[0m[31merror[0m] [0m[0m/Users/enricognagnarella/ScalaBeelity/Project/src/main/scala/view/View.scala:31:95: postfix operator toString needs to be enabled[0m
[0m[[0m[31merror[0m] [0m[0mby making the implicit value scala.language.postfixOps visible.[0m
[0m[[0m[31merror[0m] [0m[0m  def plot(map: DenseMatrix[Double], minValue: Int = 0, maxValue: Int = 100, name: String = i toString): Unit = {[0m
[0m[[0m[31merror[0m] [0m[0m                                                                                              ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/Users/enricognagnarella/ScalaBeelity/Project/src/main/scala/view/View.scala:18:34: multiarg infix syntax looks like a tuple and will be deprecated[0m
[0m[[0m[33mwarn[0m] [0m[0m  private val ColorGradient = (0 until(360, 36)).map(it => new Color(Color.HSBtoRGB(it / 360f, 1, 1)))[0m
[0m[[0m[33mwarn[0m] [0m[0m                                 ^[0m
[0m[[0m[33mwarn[0m] [0m[0mone warning found[0m
[0m[[0m[31merror[0m] [0m[0m6 errors found[0m
